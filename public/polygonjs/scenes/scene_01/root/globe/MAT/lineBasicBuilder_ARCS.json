{
	"type": "lineBasicBuilder",
	"nodes": {
		"globals1": {
			"type": "globals"
		},
		"output1": {
			"type": "output",
			"inputs": [
				null,
				{
					"index": 1,
					"node": "hsvToRgb1",
					"output": "rgb"
				},
				{
					"index": 2,
					"node": "min1",
					"output": "val"
				}
			]
		},
		"attribute1": {
			"type": "attribute",
			"params": {
				"name": "id"
			},
			"maxInputsCount": 0,
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute2": {
			"type": "attribute",
			"params": {
				"name": "idn"
			},
			"maxInputsCount": 0,
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"random1": {
			"type": "random",
			"params": {
				"seed": {
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "floatToVec2_1",
					"output": "vec2"
				}
			]
		},
		"floatToVec2_1": {
			"type": "floatToVec2",
			"params": {
				"x": {
					"overriden_options": {}
				},
				"y": {
					"raw_input": 150.55,
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "round1",
					"output": "val"
				}
			]
		},
		"round1": {
			"type": "round",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"floatToVec3_1": {
			"type": "floatToVec3",
			"params": {
				"x": {
					"overriden_options": {}
				},
				"y": {
					"raw_input": 0.76,
					"overriden_options": {}
				},
				"z": {
					"raw_input": 0.75,
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "random1",
					"output": "rand"
				}
			]
		},
		"hsvToRgb1": {
			"type": "hsvToRgb",
			"params": {
				"hsv": {
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "floatToVec3_1",
					"output": "vec3"
				}
			]
		},
		"smoothstep1": {
			"type": "smoothstep",
			"params": {
				"edge0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.44,
					"overriden_options": {}
				},
				"edge1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.52,
					"overriden_options": {}
				},
				"x": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.03,
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "null1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "multAdd2",
					"output": "val"
				},
				{
					"index": 2,
					"node": "attribute2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "edge0",
						"type": "float"
					},
					{
						"name": "edge1",
						"type": "float"
					},
					{
						"name": "x",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd1": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": true
					},
					"raw_input": -0.2
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "globals1",
					"output": "time"
				},
				{
					"index": 1,
					"node": "fitFrom01ToVariance1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd2": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					},
					"raw_input": 0.02
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "null1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"smoothstep2": {
			"type": "smoothstep",
			"params": {
				"edge0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.44
				},
				"edge1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.52
				},
				"x": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"raw_input": 0.03
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd4",
					"output": "val"
				},
				{
					"index": 1,
					"node": "multAdd3",
					"output": "val"
				},
				{
					"index": 2,
					"node": "attribute2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "edge0",
						"type": "float"
					},
					{
						"name": "edge1",
						"type": "float"
					},
					{
						"name": "x",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd3": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					},
					"raw_input": 0.84
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "null1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd4": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					},
					"raw_input": 0.2
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd3",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"min1": {
			"type": "min",
			"params": {
				"in0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"in1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "smoothstep1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "smoothstep2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in0",
						"type": "float"
					},
					{
						"name": "in1",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"null1": {
			"type": "null",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "cycle1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"cycle1": {
			"type": "cycle",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"min": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"max": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "negate1",
					"output": "val"
				},
				{
					"index": 2,
					"node": "constant1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					},
					{
						"name": "min",
						"type": "float"
					},
					{
						"name": "max",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"constant1": {
			"type": "constant",
			"params": {
				"float": 2
			},
			"maxInputsCount": 0,
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"negate1": {
			"type": "negate",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "constant1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute3": {
			"type": "attribute",
			"params": {
				"name": "id"
			},
			"maxInputsCount": 0,
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"random2": {
			"type": "random",
			"params": {
				"seed": {
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "floatToVec2_2",
					"output": "vec2"
				}
			]
		},
		"floatToVec2_2": {
			"type": "floatToVec2",
			"params": {
				"x": {
					"overriden_options": {}
				},
				"y": {
					"raw_input": 137.55,
					"overriden_options": {}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "round2",
					"output": "val"
				}
			]
		},
		"round2": {
			"type": "round",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute3",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"fitFrom01ToVariance1": {
			"type": "fitFrom01ToVariance",
			"params": {
				"val": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true,
						"editable": false
					},
					"overriden_options": {}
				},
				"center": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true,
						"editable": true
					}
				},
				"variance": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true,
						"editable": true
					},
					"raw_input": 9
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "random2",
					"output": "rand"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "val",
						"type": "float"
					},
					{
						"name": "center",
						"type": "float"
					},
					{
						"name": "variance",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		}
	},
	"params": {
		"transparent": 1,
		"opacity": 0.88,
		"alphaTest": 0.11
	},
	"persisted_config": {
		"material": {
			"metadata": {
				"version": 4.5,
				"type": "Material",
				"generator": "Material.toJSON"
			},
			"uuid": "/globe/MAT/lineBasicBuilder_ARCS-main",
			"type": "LineBasicMaterial",
			"name": "/globe/MAT/lineBasicBuilder_ARCS",
			"color": 16777215,
			"opacity": 0.88,
			"transparent": true,
			"depthFunc": 3,
			"depthTest": true,
			"depthWrite": true,
			"colorWrite": true,
			"stencilWrite": false,
			"stencilWriteMask": 255,
			"stencilFunc": 519,
			"stencilRef": 0,
			"stencilFuncMask": 255,
			"stencilFail": 7680,
			"stencilZFail": 7680,
			"stencilZPass": 7680,
			"alphaTest": 0.11
		},
		"onBeforeCompileDataJSONWithoutShaders": {
			"paramConfigs": [],
			"timeDependent": true,
			"resolutionDependent": false,
			"raymarchingLightsWorldCoordsDependent": false
		},
		"customMaterials": {
			"customDistanceMaterial": {
				"material": {
					"metadata": {
						"version": 4.5,
						"type": "Material",
						"generator": "Material.toJSON"
					},
					"uuid": "/globe/MAT/lineBasicBuilder_ARCS-customDistanceMaterial",
					"type": "ShaderMaterial",
					"name": "customDistanceMaterial",
					"opacity": 0.88,
					"depthFunc": 3,
					"depthTest": true,
					"depthWrite": true,
					"colorWrite": true,
					"stencilWrite": false,
					"stencilWriteMask": 255,
					"stencilFunc": 519,
					"stencilRef": 0,
					"stencilFuncMask": 255,
					"stencilFail": 7680,
					"stencilZFail": 7680,
					"stencilZPass": 7680,
					"alphaTest": 0.11,
					"fog": false,
					"glslVersion": null,
					"uniforms": {
						"diffuse": {
							"type": "c",
							"value": 16777215
						},
						"opacity": {
							"value": 0.88
						},
						"map": {
							"value": null
						},
						"uvTransform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"uv2Transform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"alphaMap": {
							"value": null
						},
						"alphaTest": {
							"value": 0.11
						},
						"displacementMap": {
							"value": null
						},
						"displacementScale": {
							"value": 1
						},
						"displacementBias": {
							"value": 0
						},
						"referencePosition": {
							"type": "v3",
							"value": [0, 0, 0]
						},
						"nearDistance": {
							"value": 1
						},
						"farDistance": {
							"value": 1000
						}
					},
					"defines": {
						"USE_SIZEATTENUATION": 1,
						"DEPTH_PACKING": 3201
					},
					"vertexShader": "\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// INSERT DEFINES\n\n\n// vHighPrecisionZW is added to match CustomMeshDepth.frag\n// which is itself taken from threejs\nvarying vec2 vHighPrecisionZW;\n\n\nvoid main() {\n\n\t// INSERT BODY\n\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\n\tvHighPrecisionZW = gl_Position.zw;\n}\n",
					"fragmentShader": "\n// INSERT DEFINES\n\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\n\t// INSERT BODY\n\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",
					"lights": false
				},
				"onBeforeCompileDataJSONWithoutShaders": {
					"paramConfigs": [],
					"timeDependent": true,
					"resolutionDependent": false,
					"raymarchingLightsWorldCoordsDependent": false
				}
			},
			"customDepthMaterial": {
				"material": {
					"metadata": {
						"version": 4.5,
						"type": "Material",
						"generator": "Material.toJSON"
					},
					"uuid": "/globe/MAT/lineBasicBuilder_ARCS-customDepthMaterial",
					"type": "ShaderMaterial",
					"name": "customDepthMaterial",
					"opacity": 0.88,
					"depthFunc": 3,
					"depthTest": true,
					"depthWrite": true,
					"colorWrite": true,
					"stencilWrite": false,
					"stencilWriteMask": 255,
					"stencilFunc": 519,
					"stencilRef": 0,
					"stencilFuncMask": 255,
					"stencilFail": 7680,
					"stencilZFail": 7680,
					"stencilZPass": 7680,
					"alphaTest": 0.11,
					"fog": false,
					"glslVersion": null,
					"uniforms": {
						"diffuse": {
							"type": "c",
							"value": 16777215
						},
						"opacity": {
							"value": 0.88
						},
						"map": {
							"value": null
						},
						"uvTransform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"uv2Transform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"alphaMap": {
							"value": null
						},
						"alphaTest": {
							"value": 0.11
						},
						"displacementMap": {
							"value": null
						},
						"displacementScale": {
							"value": 1
						},
						"displacementBias": {
							"value": 0
						}
					},
					"defines": {
						"DEPTH_PACKING": 3201
					},
					"vertexShader": "\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// INSERT DEFINES\n\n\n// vHighPrecisionZW is added to match CustomMeshDepth.frag\n// which is itself taken from threejs\nvarying vec2 vHighPrecisionZW;\n\n\nvoid main() {\n\n\t// INSERT BODY\n\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\n\tvHighPrecisionZW = gl_Position.zw;\n}\n",
					"fragmentShader": "\n// INSERT DEFINES\n\n\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\n\t// INSERT BODY\n\t// the new body lines should be added before the alphatest_fragment\n\t// so that alpha is set before (which is really how it would be set if the alphamap_fragment above was used by the material node parameters)\n\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), diffuseColor.a );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",
					"lights": false
				},
				"onBeforeCompileDataJSONWithoutShaders": {
					"paramConfigs": [],
					"timeDependent": true,
					"resolutionDependent": false,
					"raymarchingLightsWorldCoordsDependent": false
				}
			},
			"customDepthDOFMaterial": {
				"material": {
					"metadata": {
						"version": 4.5,
						"type": "Material",
						"generator": "Material.toJSON"
					},
					"uuid": "/globe/MAT/lineBasicBuilder_ARCS-customDepthDOFMaterial",
					"type": "ShaderMaterial",
					"name": "customDepthDOFMaterial",
					"opacity": 0.88,
					"depthFunc": 3,
					"depthTest": true,
					"depthWrite": true,
					"colorWrite": true,
					"stencilWrite": false,
					"stencilWriteMask": 255,
					"stencilFunc": 519,
					"stencilRef": 0,
					"stencilFuncMask": 255,
					"stencilFail": 7680,
					"stencilZFail": 7680,
					"stencilZPass": 7680,
					"alphaTest": 0.11,
					"fog": false,
					"glslVersion": null,
					"uniforms": {
						"diffuse": {
							"type": "c",
							"value": 16777215
						},
						"opacity": {
							"value": 0.88
						},
						"map": {
							"value": null
						},
						"uvTransform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"uv2Transform": {
							"type": "m3",
							"value": [1, 0, 0, 0, 1, 0, 0, 0, 1]
						},
						"alphaMap": {
							"value": null
						},
						"alphaTest": {
							"value": 0.11
						},
						"displacementMap": {
							"value": null
						},
						"displacementScale": {
							"value": 1
						},
						"displacementBias": {
							"value": 0
						}
					},
					"defines": {
						"DEPTH_PACKING": 3200
					},
					"vertexShader": "\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// INSERT DEFINES\n\n\n// vHighPrecisionZW is added to match CustomMeshDepth.frag\n// which is itself taken from threejs\nvarying vec2 vHighPrecisionZW;\n\n\nvoid main() {\n\n\t// INSERT BODY\n\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\n\tvHighPrecisionZW = gl_Position.zw;\n}\n",
					"fragmentShader": "\n// INSERT DEFINES\n\n\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\n\t// INSERT BODY\n\t// the new body lines should be added before the alphatest_fragment\n\t// so that alpha is set before (which is really how it would be set if the alphamap_fragment above was used by the material node parameters)\n\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), diffuseColor.a );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",
					"lights": false
				},
				"onBeforeCompileDataJSONWithoutShaders": {
					"paramConfigs": [],
					"timeDependent": true,
					"resolutionDependent": false,
					"raymarchingLightsWorldCoordsDependent": false
				}
			}
		}
	}
}
